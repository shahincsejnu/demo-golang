// Code generated by MockGen. DO NOT EDIT.
// Source: ./unittestingdemo2.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDemo is a mock of Demo interface.
type MockDemo struct {
	ctrl     *gomock.Controller
	recorder *MockDemoMockRecorder
}

// MockDemoMockRecorder is the mock recorder for MockDemo.
type MockDemoMockRecorder struct {
	mock *MockDemo
}

// NewMockDemo creates a new mock instance.
func NewMockDemo(ctrl *gomock.Controller) *MockDemo {
	mock := &MockDemo{ctrl: ctrl}
	mock.recorder = &MockDemoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDemo) EXPECT() *MockDemoMockRecorder {
	return m.recorder
}

// Sum mocks base method.
func (m *MockDemo) Sum(arg0, arg1 int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sum", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Sum indicates an expected call of Sum.
func (mr *MockDemoMockRecorder) Sum(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sum", reflect.TypeOf((*MockDemo)(nil).Sum), arg0, arg1)
}
